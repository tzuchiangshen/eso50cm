D G "__PCH__" 0 0 ""4.033""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""13-Oct-10""
D G "__TIME__" 0 0 ""17:17:55"" "* ***************************************************************************"
C G "" 0 1 1 "*"
d G "PIN_A0" 2 26 "31744"
d G "PIN_A1" 2 27 "31745"
d G "PIN_A2" 2 28 "31746"
d G "PIN_A3" 2 29 "31747"
d G "PIN_A4" 2 30 "31748"
d G "PIN_A5" 2 31 "31749"
d G "PIN_A6" 2 32 "31750"
d G "PIN_A7" 2 33 "31751"
d G "PIN_B0" 2 35 "31752"
d G "PIN_B1" 2 36 "31753"
d G "PIN_B2" 2 37 "31754"
d G "PIN_B3" 2 38 "31755"
d G "PIN_B4" 2 39 "31756"
d G "PIN_B5" 2 40 "31757"
d G "PIN_B6" 2 41 "31758"
d G "PIN_B7" 2 42 "31759"
d G "PIN_C0" 2 44 "31760"
d G "PIN_C1" 2 45 "31761"
d G "PIN_C2" 2 46 "31762"
d G "PIN_C3" 2 47 "31763"
d G "PIN_C4" 2 48 "31764"
d G "PIN_C5" 2 49 "31765"
d G "PIN_C6" 2 50 "31766"
d G "PIN_C7" 2 51 "31767"
d G "PIN_D0" 2 53 "31768"
d G "PIN_D1" 2 54 "31769"
d G "PIN_D2" 2 55 "31770"
d G "PIN_D3" 2 56 "31771"
d G "PIN_D4" 2 57 "31772"
d G "PIN_D5" 2 58 "31773"
d G "PIN_D6" 2 59 "31774"
d G "PIN_D7" 2 60 "31775"
d G "PIN_E0" 2 62 "31776"
d G "PIN_E1" 2 63 "31777"
d G "PIN_E2" 2 64 "31778"
d G "PIN_E3" 2 65 "31779"
d G "FALSE" 2 68 "0"
d G "TRUE" 2 69 "1"
d G "BYTE" 2 71 "int"
d G "BOOLEAN" 2 72 "short int"
d G "getc" 2 74 "getch"
d G "fgetc" 2 75 "getch"
d G "getchar" 2 76 "getch"
d G "putc" 2 77 "putchar"
d G "fputc" 2 78 "putchar"
d G "fgets" 2 79 "gets"
d G "fputs" 2 80 "puts"
d G "WDT_TIMEOUT" 2 86 "7"
d G "MCLR_FROM_SLEEP" 2 87 "11"
d G "MCLR_FROM_RUN" 2 88 "15"
d G "NORMAL_POWER_UP" 2 89 "12"
d G "BROWNOUT_RESTART" 2 90 "14"
d G "WDT_FROM_SLEEP" 2 91 "3"
d G "RESET_INSTRUCTION" 2 92 "0"
d G "RTCC_INTERNAL" 2 99 "0"
d G "RTCC_EXT_L_TO_H" 2 100 "32"
d G "RTCC_EXT_H_TO_L" 2 101 "48"
d G "RTCC_DIV_1" 2 103 "8"
d G "RTCC_DIV_2" 2 104 "0"
d G "RTCC_DIV_4" 2 105 "1"
d G "RTCC_DIV_8" 2 106 "2"
d G "RTCC_DIV_16" 2 107 "3"
d G "RTCC_DIV_32" 2 108 "4"
d G "RTCC_DIV_64" 2 109 "5"
d G "RTCC_DIV_128" 2 110 "6"
d G "RTCC_DIV_256" 2 111 "7"
d G "RTCC_OFF" 2 113 "0x80"
d G "RTCC_8_BIT" 2 115 "0x40"
d G "WDT_ON" 2 125 "0x100"
d G "WDT_OFF" 2 126 "0"
d G "T1_DISABLED" 2 132 "0"
d G "T1_INTERNAL" 2 133 "0x85"
d G "T1_EXTERNAL" 2 134 "0x87"
d G "T1_EXTERNAL_SYNC" 2 135 "0x83"
d G "T1_CLK_OUT" 2 137 "8"
d G "T1_DIV_BY_1" 2 139 "0"
d G "T1_DIV_BY_2" 2 140 "0x10"
d G "T1_DIV_BY_4" 2 141 "0x20"
d G "T1_DIV_BY_8" 2 142 "0x30"
d G "T2_DISABLED" 2 147 "0"
d G "T2_DIV_BY_1" 2 148 "4"
d G "T2_DIV_BY_4" 2 149 "5"
d G "T2_DIV_BY_16" 2 150 "6"
d G "T5_DISABLED" 2 156 "0"
d G "T5_INTERNAL" 2 157 "0x01"
d G "T5_EXTERNAL" 2 158 "0x07"
d G "T5_EXTERNAL_SYNC" 2 159 "0x03"
d G "T5_DIV_BY_1" 2 161 "0"
d G "T5_DIV_BY_2" 2 162 "0x08"
d G "T5_DIV_BY_4" 2 163 "0x10"
d G "T5_DIV_BY_8" 2 164 "0x18"
d G "T5_ONE_SHOT" 2 166 "0x20"
d G "T5_DISABLE_SE_RESET" 2 168 "0x40"
d G "T5_ENABLE_DURING_SLEEP" 2 170 "0x80"
d G "CCP_OFF" 2 176 "0"
d G "CCP_CAPTURE_FE" 2 177 "4"
d G "CCP_CAPTURE_RE" 2 178 "5"
d G "CCP_CAPTURE_DIV_4" 2 179 "6"
d G "CCP_CAPTURE_DIV_16" 2 180 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 2 181 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 182 "9"
d G "CCP_COMPARE_INT" 2 183 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 2 184 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 2 185 "0xB"
d G "CCP_PWM" 2 186 "0xC"
d G "CCP_PWM_PLUS_1" 2 187 "0x1c"
d G "CCP_PWM_PLUS_2" 2 188 "0x2c"
d G "CCP_PWM_PLUS_3" 2 189 "0x3c"
d G "CCP_USE_TIMER3" 2 190 "0x100"
v G "CCP_1" 2 191 "int16"
v G "CCP_2" 2 195 "int16"
d G "SPI_MASTER" 2 202 "0x20"
d G "SPI_SLAVE" 2 203 "0x24"
d G "SPI_L_TO_H" 2 204 "0"
d G "SPI_H_TO_L" 2 205 "0x10"
d G "SPI_CLK_DIV_4" 2 206 "0"
d G "SPI_CLK_DIV_16" 2 207 "1"
d G "SPI_CLK_DIV_64" 2 208 "2"
d G "SPI_CLK_T2" 2 209 "3"
d G "SPI_SS_DISABLED" 2 210 "1"
d G "SPI_SAMPLE_AT_END" 2 212 "0x8000"
d G "SPI_XMIT_L_TO_H" 2 213 "0x4000"
d G "UART_ADDRESS" 2 219 "2"
d G "UART_DATA" 2 220 "4"
d G "UART_AUTODETECT" 2 221 "8"
d G "UART_AUTODETECT_NOWAIT" 2 222 "9"
d G "UART_WAKEUP_ON_RDA" 2 223 "10"
d G "UART_SEND_BREAK" 2 224 "13"
d G "LVD_LVDIN" 2 228 "0x1F"
d G "LVD_42" 2 229 "0x1E"
d G "LVD_39" 2 230 "0x1D"
d G "LVD_38" 2 231 "0x1C"
d G "LVD_36" 2 232 "0x1B"
d G "LVD_34" 2 233 "0x1A"
d G "LVD_33" 2 234 "0x19"
d G "LVD_31" 2 235 "0x18"
d G "LVD_28" 2 236 "0x17"
d G "LVD_27" 2 237 "0x16"
d G "LVD_26" 2 238 "0x15"
d G "LVD_24" 2 239 "0x14"
d G "LVD_23" 2 240 "0x13"
d G "LVD_21" 2 241 "0x12"
d G "OSC_31KHZ" 2 246 "0"
d G "OSC_125KHZ" 2 247 "0x10"
d G "OSC_250KHZ" 2 248 "0x20"
d G "OSC_500KHZ" 2 249 "0x30"
d G "OSC_1MHZ" 2 250 "0x40"
d G "OSC_2MHZ" 2 251 "0x50"
d G "OSC_4MHZ" 2 252 "0x60"
d G "OSC_8MHZ" 2 253 "0x70"
d G "OSC_TIMER1" 2 255 "1"
d G "OSC_INTRC" 2 256 "2"
d G "OSC_NORMAL" 2 257 "0"
d G "OSC_IDLE_MODE" 2 259 "0x80"
d G "OSC_STATE_STABLE" 2 263 "4"
d G "OSC_STATE_EXT_RUNNING" 2 264 "8"
d G "PWM_CLOCK_DIV_4" 2 269 "0x00"
d G "PWM_CLOCK_DIV_16" 2 270 "0x04"
d G "PWM_CLOCK_DIV_64" 2 271 "0x08"
d G "PWM_CLOCK_DIV_128" 2 272 "0x0C"
d G "PWM_OFF" 2 274 "0x0000"
d G "PWM_FREE_RUN" 2 275 "0x8000"
d G "PWM_SINGLE_SHOT" 2 276 "0x8001"
d G "PWM_UP_DOWN" 2 277 "0x8002"
d G "PWM_UP_DOWN_INT" 2 278 "0x8003"
d G "PWM_OVERRIDE_SYNC" 2 280 "0x10000"
d G "PWM_UP_TRIGGER" 2 282 "0x00000"
d G "PWM_DOWN_TRIGGER" 2 283 "0x80000"
d G "PWM_DEAD_CLOCK_DIV_2" 2 285 "0x000000"
d G "PWM_DEAD_CLOCK_DIV_4" 2 286 "0x100000"
d G "PWM_DEAD_CLOCK_DIV_8" 2 287 "0x200000"
d G "PWM_DEAD_CLOCK_DIV_16" 2 288 "0x300000"
d G "PWM_UPDATE_DISABLE" 2 291 "0x20000"
d G "PWM_UPDATE_ENABLE" 2 292 "0x00000"
d G "PWM_ODD_ON" 2 296 "1"
d G "PWM_BOTH_ON" 2 297 "2"
d G "PWM_COMPLEMENTARY" 2 298 "3"
d G "ADC_OFF" 2 305 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 306 "0x1000000"
d G "ADC_CLOCK_DIV_4" 2 307 "0x0400"
d G "ADC_CLOCK_DIV_8" 2 308 "0x0100"
d G "ADC_CLOCK_DIV_16" 2 309 "0x0500"
d G "ADC_CLOCK_DIV_32" 2 310 "0x0200"
d G "ADC_CLOCK_DIV_64" 2 311 "0x0600"
d G "ADC_CLOCK_INTERNAL" 2 312 "0x0700" "Internal 2-6us"
d G "ADC_TAD_MUL_0" 2 315 "0x0000"
d G "ADC_TAD_MUL_2" 2 316 "0x0800"
d G "ADC_TAD_MUL_4" 2 317 "0x1000"
d G "ADC_TAD_MUL_6" 2 318 "0x1800"
d G "ADC_TAD_MUL_8" 2 319 "0x2000"
d G "ADC_TAD_MUL_10" 2 320 "0x2800"
d G "ADC_TAD_MUL_12" 2 321 "0x3000"
d G "ADC_TAD_MUL_16" 2 322 "0x3800"
d G "ADC_TAD_MUL_20" 2 323 "0x4000"
d G "ADC_TAD_MUL_24" 2 324 "0x4800"
d G "ADC_TAD_MUL_28" 2 325 "0x5000"
d G "ADC_TAD_MUL_32" 2 326 "0x5800"
d G "ADC_TAD_MUL_36" 2 327 "0x6000"
d G "ADC_TAD_MUL_40" 2 328 "0x6800"
d G "ADC_TAD_MUL_48" 2 329 "0x7000"
d G "ADC_TAD_MUL_64" 2 330 "0x7800"
d G "ADC_CONT_A" 2 333 "0x20" "These options select"
d G "ADC_CONT_B" 2 334 "0x24" "continuous sampling, the channels"
d G "ADC_CONT_C" 2 335 "0x28" "A,B,C,D are each mapped to a pin"
d G "ADC_CONT_D" 2 336 "0x2C" "in set_adc_channel"
d G "ADC_CONT_A_B" 2 338 "0x30" "These do continuous sampling"
d G "ADC_CONT_A_B_C_D" 2 339 "0x34" "on alternating channels"
d G "ADC_CONT_AB" 2 340 "0x38"
d G "ADC_CONT_AB_CD" 2 341 "0x3C"
d G "ADC_WHEN_INT0" 2 344 "0x010000"
d G "ADC_WHEN_TIMER5" 2 345 "0x020000"
d G "ADC_WHEN_IC1" 2 346 "0x040000"
d G "ADC_WHEN_CCP2" 2 347 "0x080000"
d G "ADC_WHEN_PPWM" 2 348 "0x100000"
d G "ADC_INT_EVERY_OTHER" 2 351 "0x400000"
d G "ADC_INT_EVERY_FOUR" 2 352 "0x800000"
d G "sAN0" 2 358 "1" "| A0"
d G "sAN1" 2 359 "2" "| A1"
d G "sAN2" 2 360 "4" "| A2"
d G "sAN3" 2 361 "8" "| A3"
d G "sAN4" 2 362 "16" "| A4"
d G "sAN5" 2 363 "32" "| A5"
d G "sAN6" 2 364 "64" "| E0"
d G "sAN7" 2 365 "128" "| E1"
d G "sAN8" 2 366 "0x10000" "| E2"
d G "NO_ANALOGS" 2 367 "0" "None"
d G "ALL_ANALOG" 2 368 "0x100FF" "A0 A1 A2 A3 A4 A5 E0 E1 E2"
d G "VSS_VDD" 2 371 "0x0000" "Range 0-Vdd"
d G "VREF_VREF" 2 372 "0xC000" "Range VrefL-VrefH"
d G "VSS_VREF" 2 373 "0x4000" "Range 0-VrefH"
d G "VREF_VDD" 2 374 "0x8000" "Range VrefL-Vdd"
d G "ADC_START_AND_READ" 2 378 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 379 "1"
d G "ADC_READ_ONLY" 2 380 "6"
d G "L_TO_H" 2 389 "0x40"
d G "H_TO_L" 2 390 "0"
d G "GLOBAL" 2 392 "0xF2C0"
d G "INT_RTCC" 2 393 "0xF220"
d G "INT_TIMER0" 2 394 "0xF220"
d G "INT_TIMER1" 2 395 "0x9D01"
d G "INT_TIMER2" 2 396 "0x9D02"
d G "INT_EXT" 2 397 "0xF210"
d G "INT_EXT1" 2 398 "0xF008"
d G "INT_EXT2" 2 399 "0xF010"
d G "INT_RB" 2 400 "0xFFF208"
d G "INT_AD" 2 401 "0x9D40"
d G "INT_RDA" 2 402 "0x9D20"
d G "INT_TBE" 2 403 "0x9D10"
d G "INT_SSP" 2 404 "0x9D08"
d G "INT_CCP1" 2 405 "0x9D04"
d G "INT_CCP2" 2 406 "0xA001"
d G "INT_LOWVOLT" 2 407 "0xA004"
d G "INT_EEPROM" 2 408 "0xA010"
d G "INT_OSCF" 2 409 "0xA080"
d G "INT_PWMTB" 2 410 "0xA310"
d G "INT_IC3DR" 2 411 "0xA308"
d G "INT_IC2QEI" 2 412 "0xA304"
d G "INT_IC1" 2 413 "0xA302"
d G "INT_TIMER5" 2 414 "0xA301"
D G "_STDLIB" 3 12 ""
D G "RAND_MAX" 3 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 3 24 "1"
T G "div_t" 3 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 3 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
D G "_STDDEF" 4 13 ""
D G "ptrdiff_t" 4 18 "long"
D G "size_t" 4 21 "int"
D G "wchar_t" 4 22 "char"
D G "NULL" 4 23 "0"
D G "offsetof" 4 25 "(s,f) (offsetofbit(s,f)/8)"
C L "atof" 3 43 2 "FUNCTION"
C L "atof" 3 46 1 "*"
C L "atof" 3 46 1 "*"
V L "s" 3 50 "*int8"
F G "atof" 3 50 "float(*int8 s)" "Standard template: float atoe(char * s)"
C L "atof" 3 52 1 "*"
C L "atof" 3 52 1 "*"
C L "atof" 3 52 1 "*"
V L "s" 3 57 "*int8"
F G "atoe" 3 57 "float(*int8 s)" "Standard template: signed int  atoi(char * s)"
C L "atoe" 3 59 1 "*"
C L "atoe" 3 59 1 "*"
V L "s" 3 63 "*int8"
F G "atoi" 3 63 "sint8(*int8 s)" "Syntax: signed int32  atoi32(char * s)"
C L "atoi" 3 59 2 "FUNCTION"
V L "s" 3 68 "*int8"
F G "atoi32" 3 68 "sint32(*int8 s)" "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi32" 3 59 2 "FUNCTION"
V L "num" 3 73 "sint32"
V L "base" 3 73 "int8"
V L "s" 3 73 "*int8"
F G "itoa" 3 73 "*int8(sint32 num,int8 base,*int8 s)" "Standard template: signed long  atol(char * s)"
C L "itoa" 3 75 1 "*"
C L "itoa" 3 75 1 "*"
V L "s" 3 79 "*int8"
F G "atol" 3 79 "sint16(*int8 s)" "Standard template: float strtol(char * s,char *endptr)"
C L "atol" 3 81 1 "*"
C L "atol" 3 81 1 "*"
C L "atol" 3 81 1 "*"
V L "s" 3 86 "*int8"
V L "endptr" 3 86 "*int8"
F G "strtod" 3 86 "float(*int8 s,*int8 endptr)" "Standard template: long strtoul(char * s,char *endptr,signed int base)"
C L "strtod" 3 88 1 "*"
C L "strtod" 3 88 1 "*"
C L "strtod" 3 88 1 "*"
C L "strtod" 3 88 1 "*"
V L "s" 3 94 "*int8"
V L "endptr" 3 94 "*int8"
V L "base" 3 94 "sint8"
F G "strtol" 3 94 "sint16(*int8 s,*int8 endptr,sint8 base)" "Standard template: long strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 3 96 1 "*"
C L "strtol" 3 96 1 "*"
C L "strtol" 3 96 1 "*"
C L "strtol" 3 96 1 "*"
V L "s" 3 102 "*int8"
V L "endptr" 3 102 "*int8"
V L "base" 3 102 "sint8"
F G "strtoul" 3 102 "int16(*int8 s,*int8 endptr,sint8 base)" "Pseudo-random sequence generation functions"
C L "strtoul" 3 96 1 "FUNCTION"
C L "strtoul" 3 108 1 "*"
C L "strtoul" 3 108 1 "*"
C L "strtoul" 3 108 1 "*"
C L "strtoul" 3 108 1 "*"
C L "strtoul" 3 108 1 "*"
F G "rand" 3 117 "int16()" "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 3 119 1 "*"
C L "rand" 3 119 1 "*"
C L "rand" 3 119 1 "*"
C L "rand" 3 119 1 "*"
C L "rand" 3 119 1 "*"
C L "rand" 3 119 1 "*"
C L "rand" 3 119 1 "*"
C L "rand" 3 119 1 "*"
C L "rand" 3 119 1 "*"
C L "rand" 3 119 1 "*"
C L "rand" 3 119 1 "*"
C L "rand" 3 119 1 "*"
C L "rand" 3 119 1 "*"
C L "rand" 3 119 1 "*"
C L "rand" 3 119 1 "*"
V L "seed" 3 139 "int32"
F G "srand" 3 139 "void(int32 seed)" "Memory management functions"
C L "srand" 3 119 3 "FUNCTION"
V L "string" 3 153 "*int8"
F G "system" 3 153 "sint8(*int8 string)" "Searching and sorting utilities"
C L "system" 3 119 1 "FUNCTION"
C L "system" 3 159 1 "*"
C L "system" 3 159 1 "*"
C L "system" 3 159 1 "*"
C L "system" 3 159 1 "*"
C L "system" 3 159 1 "*"
C L "system" 3 159 1 "*"
C L "system" 3 159 1 "*"
C L "system" 3 159 1 "*"
C L "system" 3 159 1 "*"
C L "system" 3 159 1 "*"
C L "system" 3 159 4 "*"
C L "system" 3 177 1 "*"
C L "system" 3 177 1 "*"
C L "system" 3 177 1 "*"
C L "system" 3 177 1 "*"
C L "system" 3 177 1 "*"
C L "system" 3 177 1 "*"
C L "system" 3 177 1 "*"
C L "system" 3 177 1 "*"
D G "labs" 3 197 "abs"
V L "numer" 3 199 "sint8"
V L "denom" 3 199 "sint8"
F G "div" 3 199 "div_t(sint8 numer,sint8 denom)"
V L "numer" 3 200 "sint16"
V L "denom" 3 200 "sint16"
F G "ldiv" 3 200 "ldiv_t(sint16 numer,sint16 denom)" "Multibyte character functions"
C L "ldiv" 3 177 4 "FUNCTION"
C L "ldiv" 4 2 7 "FUNCTION"
D G "_STRING" 5 12 ""
C L "ldiv" 4 2 7 "FUNCTION"
D G "_CTYPE" 6 12 ""
D G "islower" 6 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 6 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 6 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 6 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 6 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 6 19 "(x)  ((x)==' ')"
D G "isxdigit" 6 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 6 21 "(x)  ((x)<' ')"
D G "isprint" 6 22 "(x)  ((x)>=' ')"
D G "isgraph" 6 23 "(x)  ((x)>' ')"
D G "ispunct" 6 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "ldiv" 5 19 10 "FUNCTION"
V L "s1" 5 34 "*int8"
V L "s2" 5 34 "*int8"
V L "n" 5 34 "int8"
F G "memmove" 5 35 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "sc1" 5 36 "*int8"
V L "sc2" 5 37 "*int8"
C L "strcopy" 5 19 3 "FUNCTION"
V L "s1" 5 53 "*int8"
V L "s2" 5 53 "*int8"
F G "strcopy" 5 54 "*int8(*int8 s1,*int8 s2)"
V L "s" 5 55 "*int8"
C L "strncpy" 5 19 4 "FUNCTION"
V L "s1" 5 69 "*int8"
V L "s2" 5 69 "*int8"
V L "n" 5 69 "int8"
F G "strncpy" 5 70 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 5 71 "*int8"
C L "strcat" 5 19 3 "FUNCTION"
V L "s1" 5 86 "*int8"
V L "s2" 5 86 "*int8"
F G "strcat" 5 87 "*int8(*int8 s1,*int8 s2)"
V L "s" 5 88 "*int8"
C L "strncat" 5 19 2 "FUNCTION"
V L "s1" 5 104 "*int8"
V L "s2" 5 104 "*int8"
V L "n" 5 104 "int8"
F G "strncat" 5 105 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 5 106 "*int8"
C L "memcmp" 5 19 3 "FUNCTION"
V L "s1" 5 128 "*int8"
V L "s2" 5 128 "*int8"
V L "n" 5 128 "int8"
F G "memcmp" 5 129 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "su1" 5 130 "*int8"
V L "su2" 5 130 "*int8"
C L "strcmp" 5 19 2 "FUNCTION"
V L "s1" 5 142 "*int8"
V L "s2" 5 142 "*int8"
F G "strcmp" 5 143 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 5 19 2 "FUNCTION"
V L "s1" 5 152 "*int8"
V L "s2" 5 152 "*int8"
F G "strcoll" 5 153 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 5 19 4 "FUNCTION"
V L "s1" 5 165 "*int8"
V L "s2" 5 165 "*int8"
V L "n" 5 165 "int8"
F G "strncmp" 5 166 "sint8(*int8 s1,*int8 s2,int8 n)"
C L "strxfrm" 5 19 3 "FUNCTION"
V L "s1" 5 177 "*int8"
V L "s2" 5 177 "*int8"
V L "n" 5 177 "int8"
F G "strxfrm" 5 178 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 5 179 "*int8"
V L "n1" 5 180 "int8"
C L "memchr" 5 19 3 "FUNCTION"
V L "s" 5 199 "*int8"
V L "c" 5 199 "int8"
V L "n" 5 199 "int8"
F G "memchr" 5 200 "*int8(*int8 s,int8 c,int8 n)"
V L "uc" 5 201 "int8"
V L "su" 5 202 "*int8"
C L "strchr" 5 19 2 "FUNCTION"
V L "s" 5 213 "*int8"
V L "c" 5 213 "int8"
F G "strchr" 5 214 "*int8(*int8 s,int8 c)"
C L "strcspn" 5 19 4 "FUNCTION"
V L "s1" 5 225 "*int8"
V L "s2" 5 225 "*int8"
F G "strcspn" 5 226 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 5 227 "*int8"
V L "sc2" 5 227 "*int8"
C L "strpbrk" 5 19 4 "FUNCTION"
V L "s1" 5 240 "*int8"
V L "s2" 5 240 "*int8"
F G "strpbrk" 5 241 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 5 242 "*int8"
V L "sc2" 5 242 "*int8"
C L "strrchr" 5 19 2 "FUNCTION"
V L "s" 5 255 "*int8"
V L "c" 5 255 "int8"
F G "strrchr" 5 256 "*int8(*int8 s,int8 c)"
V L "p" 5 257 "*int8"
C L "strspn" 5 19 2 "FUNCTION"
V L "s1" 5 270 "*int8"
V L "s2" 5 270 "*int8"
F G "strspn" 5 271 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 5 272 "*int8"
V L "sc2" 5 272 "*int8"
C L "strstr" 5 19 6 "FUNCTION"
V L "s1" 5 289 "*int8"
V L "s2" 5 289 "*int8"
F G "strstr" 5 290 "*int8(*int8 s1,*int8 s2)"
V L "s" 5 291 "*int8"
V L "t" 5 291 "*int8"
C L "strtok" 5 19 13 "FUNCTION"
V L "s1" 5 328 "*int8"
V L "s2" 5 328 "*int8"
F G "strtok" 5 329 "*int8(*int8 s1,*int8 s2)"
V L "beg" 5 330 "*int8"
V L "end" 5 330 "*int8"
V L "save" 5 331 "*int8"
C L "strlen" 5 19 6 "FUNCTION"
V L "s" 5 377 "*int8"
F G "strlen" 5 378 "*int8(*int8 s)"
V L "sc" 5 379 "*int8"
C L "stricmp" 5 19 2 "FUNCTION"
V L "s1" 5 388 "*int8"
V L "s2" 5 388 "*int8"
F G "stricmp" 5 389 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 5 19 3 "FUNCTION"
V L "s" 5 402 "*int8"
F G "strlwr" 5 403 "*int8(*int8 s)"
V L "p" 5 404 "*int8"
V L "numer" 3 222 "sint8"
V L "denom" 3 222 "sint8"
F G "div" 3 223 "div_t(sint8 numer,sint8 denom)"
V L "val" 3 224 "div_t"
V L "numer" 3 230 "sint16"
V L "denom" 3 230 "sint16"
F G "ldiv" 3 231 "ldiv_t(sint16 numer,sint16 denom)"
V L "val" 3 232 "ldiv_t"
V L "s" 3 238 "*int8"
F G "atof" 3 239 "float(*int8 s)"
V L "pow10" 3 240 "float"
V L "result" 3 241 "float"
V L "sign" 3 242 "int8"
V L "c" 3 243 "int8"
V L "ptr" 3 244 "int8"
V L "s" 3 277 "*int8"
F G "atoe" 3 278 "float(*int8 s)"
V L "pow10" 3 279 "float"
V L "result" 3 280 "float"
V L "sign" 3 281 "int8"
V L "expsign" 3 282 "int8"
V L "c" 3 283 "int8"
V L "ptr" 3 284 "int8"
V L "i" 3 285 "int8"
V L "exp" 3 286 "float"
V L "expcnt" 3 287 "int8"
C L "atoe" 3 313 1 "FUNCTION"
V L "s" 3 344 "*int8"
F G "atoi" 3 345 "sint8(*int8 s)"
V L "result" 3 346 "sint8"
V L "sign" 3 347 "int8"
V L "base" 3 347 "int8"
V L "index" 3 347 "int8"
V L "c" 3 348 "int8"
C L "atoi" 3 313 1 "FUNCTION"
C L "atoi" 3 313 1 "FUNCTION"
C L "atoi" 3 313 1 "FUNCTION"
C L "atoi" 3 313 1 "FUNCTION"
C L "atoi" 3 313 1 "FUNCTION"
C L "atoi" 3 313 1 "FUNCTION"
V L "s" 3 413 "*int8"
F G "atol" 3 414 "sint16(*int8 s)"
V L "result" 3 415 "sint16"
V L "sign" 3 416 "int8"
V L "base" 3 416 "int8"
V L "index" 3 416 "int8"
V L "c" 3 417 "int8"
C L "atol" 3 313 1 "FUNCTION"
C L "atol" 3 313 1 "FUNCTION"
C L "atol" 3 313 1 "FUNCTION"
C L "atol" 3 313 1 "FUNCTION"
C L "mult_with10" 3 313 1 "FUNCTION"
V L "num" 3 480 "int32"
F G "mult_with10" 3 481 "sint32(int32 num)"
V L "s" 3 485 "*int8"
F G "atoi32" 3 486 "sint32(*int8 s)"
V L "result" 3 487 "sint32"
V L "sign" 3 488 "int8"
V L "base" 3 488 "int8"
V L "index" 3 488 "int8"
V L "c" 3 489 "int8"
C L "atoi32" 3 313 1 "FUNCTION"
C L "atoi32" 3 313 1 "FUNCTION"
C L "atoi32" 3 313 1 "FUNCTION"
C L "atoi32" 3 313 1 "FUNCTION"
C L "atoi32" 3 313 1 "FUNCTION"
V L "num" 3 550 "sint32"
V L "base" 3 550 "int8"
V L "s" 3 550 "*int8"
F G "itoa" 3 551 "*int8(sint32 num,int8 base,*int8 s)"
V L "temp" 3 552 "int32"
V L "i" 3 553 "int8"
V L "sign" 3 553 "int8"
V L "cnt" 3 553 "int8"
V L "c" 3 554 "int8"
C L "itoa" 3 313 1 "FUNCTION"
C L "itoa" 3 313 1 "FUNCTION"
C L "itoa" 3 313 1 "FUNCTION"
C L "itoa" 3 313 1 "FUNCTION"
C L "itoa" 3 313 1 "FUNCTION"
V L "s" 3 587 "*int8"
V L "endptr" 3 587 "*int8"
F G "strtod" 3 587 "float(*int8 s,*int8 endptr)"
V L "pow10" 3 588 "float"
V L "result" 3 589 "float"
V L "sign" 3 590 "int8"
V L "point" 3 590 "int8"
V L "c" 3 591 "int8"
V L "ptr" 3 592 "int8"
V L "s" 3 651 "*int8"
V L "endptr" 3 651 "*int8"
V L "base" 3 651 "sint8"
F G "strtoul" 3 652 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 3 653 "*int8"
V L "s1" 3 653 "*int8"
V L "sd" 3 653 "*int8"
V L "x" 3 654 "int16"
V L "sign" 3 655 "int8"
V L "digits" 3 656 "int8[1]"
C L "strtoul" 3 313 1 "FUNCTION"
C L "strtoul" 3 313 1 "FUNCTION"
C L "strtoul" 3 313 1 "FUNCTION"
V L "s" 3 713 "*int8"
V L "endptr" 3 713 "*int8"
V L "base" 3 713 "sint8"
F G "strtol" 3 714 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 3 715 "*int8"
V L "s1" 3 715 "*int8"
V L "sd" 3 715 "*int8"
V L "x" 3 716 "sint16"
V L "sign" 3 717 "int8"
V L "digits" 3 718 "int8[1]"
C L "strtol" 3 313 1 "FUNCTION"
C L "strtol" 3 313 1 "FUNCTION"
C L "strtol" 3 313 1 "FUNCTION"
V L "string" 3 776 "*int8"
F G "system" 3 777 "sint8(*int8 string)"
V L "s" 3 781 "*int8"
V L "n" 3 781 "int8"
F G "mblen" 3 782 "int8(*int8 s,int8 n)"
V L "pwc" 3 786 "*int8"
V L "s" 3 786 "*int8"
V L "n" 3 786 "int8"
F G "mbtowc" 3 787 "int8(*int8 pwc,*int8 s,int8 n)"
V L "s" 3 792 "*int8"
V L "wchar" 3 792 "int8"
F G "wctomb" 3 793 "int8(*int8 s,int8 wchar)"
V L "pwcs" 3 798 "*int8"
V L "s" 3 798 "*int8"
V L "n" 3 798 "int8"
F G "mbstowcs" 3 799 "int8(*int8 pwcs,*int8 s,int8 n)"
V L "s" 3 804 "*int8"
V L "pwcs" 3 804 "*int8"
V L "n" 3 804 "int8"
F G "wcstombs" 3 805 "int8(*int8 s,*int8 pwcs,int8 n)"
V G "_Randseed" 3 814 "int32"
F G "rand" 3 817 "int16()"
V L "seed" 3 822 "int32"
F G "srand" 3 823 "void(int32 seed)"
V L "p1" 3 831 "*int8"
V L "p2" 3 831 "*int8"
T G "*_Cmpfun" 3 831 "sint8(*int8 p1,*int8 p2)"
V L "qdata" 3 833 "*int8"
V L "qitems" 3 833 "int8"
V L "qsize" 3 833 "int8"
V L "cmp" 3 833 "_Cmpfun"
F G "qsort" 3 833 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "m" 3 834 "int8"
V L "j" 3 834 "int8"
V L "i" 3 834 "int8"
V L "l" 3 834 "int8"
V L "done" 3 835 "int1"
V L "t" 3 836 "int8[16]"
V L "key" 3 861 "*int8"
V L "base" 3 861 "*int8"
V L "num" 3 861 "int8"
V L "width" 3 861 "int8"
V L "cmp" 3 861 "_Cmpfun"
F G "bsearch" 3 862 "*int8(*int8 key,*int8 base,int8 num,int8 width,_Cmpfun cmp)"
V L "p" 3 863 "*int8"
V L "q" 3 863 "*int8"
V L "n" 3 864 "int8"
V L "pivot" 3 865 "int8"
V L "val" 3 866 "sint8"
C L "bsearch" 3 313 1 "FUNCTION"
D G "I2C_ADDRESS" 1 38 "0xA2" "MotorRA"
D G "rLED" 0 6 "PIN_E1"
V G "PIC_T0CONbits" 7 12 "{int3 T0PS,int1 PSA,int1 T0SE,int1 T0CS,int1 T016BITS,int1 TMR0ON}"
C L "SetupTMR0" 7 2 23 "FUNCTION"
F G "SetupTMR0" 7 55 "void()"
C L "SetupTMR0" 7 2 1 "FUNCTION"
C L "SetupTMR0" 7 2 1 "FUNCTION"
D G "I2C_MASK" 8 4 "0x2D"
V G "PIC_SSPCONbits" 8 21 "{int4 SSPM,int1 CKP,int1 SSPEN,int1 SSPOV,int1 WCOL}"
V G "PIC_SSPSTATbits" 8 43 "{int1 BF,int1 UA,int1 R_W,int1 s,int1 p,int1 D_A,int1 CKE,int1 SMP}"
V G "PIC_TRISCbits" 8 60 "{int1 RC0,int1 RC1,int1 RC2,int1 RC3,int1 RC4,int1 RC5,int1 RC6,int1 RC7}"
C L "WriteI2C" 8 2 1 "FUNCTION"
V L "byte_out" 8 67 "int8"
F G "WriteI2C" 8 68 "int8(int8 byte_out)"
C L "WriteI2C" 8 2 1 "FUNCTION"
D G "PTMR_1KHz" 9 13 "4095" "Aprox Fpwm = 1[KHz]"
D G "PTMR_10KHz" 9 14 "500" "Aprox Fpwm = 10[KHz]"
D G "PTMR_20KHz" 9 15 "250" "Aprox Fpwm = 20[KHz]"
C L "SetupPowerPWM" 9 17 1 "*"
C L "SetupPowerPWM" 9 17 1 "*"
C L "SetupPowerPWM" 9 17 1 "*"
C L "SetupPowerPWM" 9 17 1 "*"
C L "SetupPowerPWM" 9 17 1 "*"
C L "SetupPowerPWM" 9 17 1 "*"
C L "SetupPowerPWM" 9 17 1 "*"
C L "SetupPowerPWM" 9 17 1 "*"
C L "SetupPowerPWM" 9 17 1 "*"
C L "SetupPowerPWM" 9 17 1 "*"
C L "SetupPowerPWM" 9 17 1 "*"
C L "SetupPowerPWM" 9 17 1 "*"
F G "SetupPowerPWM" 9 33 "void()"
C L "SetupPowerPWM" 9 17 1 "FUNCTION"
C L "SetupPowerPWM" 9 17 1 "FUNCTION"
C L "SetupPowerPWM" 9 17 1 "FUNCTION"
C L "SetupPowerPWM" 9 17 1 "FUNCTION"
C L "SetupPowerPWM" 9 17 1 "FUNCTION"
C L "SetupPowerPWM" 9 17 1 "FUNCTION"
C L "SetupPowerPWM" 9 17 9 "FUNCTION"
V G "PIC_T5CONbits" 10 13 "{int1 TMR5ON,int1 TMR5CS,int1 noT5SYNC,int2 T5PS,int1 T5MOD,int1 noRESEN,int1 T5SEN}"
C L "SetupTMR5" 10 2 1 "FUNCTION"
F G "SetupTMR5" 10 27 "void()"
C L "SetupTMR5" 10 2 1 "FUNCTION"
C L "SetupTMR5" 10 2 1 "FUNCTION"
C L "SetupTMR5" 10 2 2 "FUNCTION"
C L "SetupTMR5" 10 2 3 "FUNCTION"
C L "SetupTMR5" 10 2 1 "FUNCTION"
C L "SetupTMR5" 10 2 1 "FUNCTION"
C L "SetupTMR5" 10 2 1 "FUNCTION"
D G "QEI_4X_ResetPERIOD" 11 1 "0x06"
D G "QEI_4X_ResetINDX" 11 2 "0x05"
D G "QEI_2X_ResetPERIOD" 11 3 "0x02"
D G "QEI_2X_ResetINDX" 11 4 "0x01"
D G "QEI_OFF" 11 5 "0x00"
D G "QEI_RED_1_64" 11 7 "0x03"
D G "QEI_RED_1_16" 11 8 "0x02"
D G "QEI_RED_1_4" 11 9 "0x01"
D G "QEI_RED_1_1" 11 10 "0x00"
V G "PIC_CAP1CONbits" 11 20 "{int4 CAP1M,int1 unused1,int1 unused2,int1 CAP1REN,int1 unused3}"
V G "PIC_QEICONbits" 11 32 "{int2 PDEC,int3 QEIM,int1 UPDOWN,int1 ERROR,int1 noVELM}"
V G "PIC_DFLTCONbits" 11 45 "{int3 FLTCK,int1 FLT1EN,int1 FLT2EN,int1 FLT3EN,int1 FLT4EN,int1 unused}"
C L "SetupQEI" 11 64 1 "*"
C L "SetupQEI" 11 64 1 "*"
F G "SetupQEI" 11 67 "void()"
C L "SetupQEI" 11 64 1 "FUNCTION"
C L "SetupQEI" 11 64 3 "FUNCTION"
C L "SetupQEI" 11 64 1 "FUNCTION"
C L "SetupQEI" 11 64 1 "FUNCTION"
C L "SetupQEI" 11 64 1 "FUNCTION"
C L "SetupQEI" 11 64 1 "FUNCTION"
C L "SetupQEI" 11 64 1 "FUNCTION"
C L "SetupQEI" 11 64 4 "FUNCTION"
C L "SetupQEI" 11 64 1 "FUNCTION"
C L "SetupQEI" 11 64 1 "FUNCTION"
D G "DISABLE" 0 20 "0"
D G "ENABLE" 0 21 "1"
D G "NEWPID" 0 22 "2"
D G "PID" 0 23 "3"
D G "NEWRAMPA" 0 24 "4"
D G "RAMPA" 0 25 "5"
D G "RESETPID" 0 27 "7"
D G "STOP" 0 28 "8"
D G "STOPSLOWLY" 0 29 "9"
D G "IDLE" 0 30 "255"
V G "tmr0cnt" 0 35 "int16"
V G "p_tmr0rv" 0 36 "int16"
V G "p_Tmr0" 0 37 "int16"
V G "tmr0_flag" 0 38 "int8"
V G "tmr0_XHz_flag" 0 39 "int8" "i2c"
D G "buf_len" 0 43 "4"
V G "i2c_rx_flag" 0 44 "int8"
V G "i2c_tx_flag" 0 45 "int8"
V G "i2c_state" 0 46 "int8"
V G "buf_idx" 0 47 "int8"
V G "buffer" 0 48 "int8[4]"
V G "mem_add" 0 49 "int8"
V G "i2c_add" 0 50 "int8"
V G "data" 0 51 "sint32[8]"
V G "pointer" 0 52 "*int8" "pPWM"
V G "run_flag" 0 56 "int8"
V G "p_Vfin" 0 59 "sint16"
V G "p_dir" 0 60 "int8"
V G "m_MtrCtrl" 0 62 "int8" "1"
V G "m_V" 0 63 "sint16"
V G "new_V" 0 64 "sint16"
V G "m_dir" 0 65 "int8"
V G "new_dir" 0 66 "int8"
V G "m_NextDuty0" 0 67 "int16"
V G "m_NextDuty2" 0 68 "int16"
V G "m_NextDuty4" 0 69 "int16"
V G "m_NextDuty6" 0 70 "int16" "PID"
V G "encTrkVel" 0 75 "float"
V G "encVelRef" 0 76 "float"
V G "encVelRef_old" 0 77 "float"
V G "encVelRef_new" 0 78 "float"
V G "Vpid" 0 79 "float"
V G "ERROR" 0 81 "float"
V G "derr" 0 82 "float"
V G "interr" 0 83 "float"
V G "v_Kp" 0 84 "float" "4"
V G "v_Ki" 0 85 "float" "4"
V G "v_Kd" 0 86 "float" "4"
V G "h_error" 0 88 "float"
V G "h_derr" 0 89 "float"
V G "h_interr" 0 90 "float"
V G "h_Kp" 0 91 "float" "4"
V G "h_Ki" 0 92 "float" "4"
V G "h_Kd" 0 93 "float" "4"
V G "h_pid_flag" 0 95 "int8" "Position"
V G "trgPos" 0 98 "sint32"
V G "trgThreshold" 0 99 "sint32"
V G "diffPos" 0 100 "sint32"
V G "trgDir" 0 101 "int8"
V G "trgDirOld" 0 102 "int8"
V G "posError" 0 104 "float"
V G "trgEncVelRef" 0 105 "float" "QE"
V G "encRev" 0 111 "sint32"
V G "encRevOld" 0 111 "sint32"
V G "POSCNT" 0 112 "int16"
V G "POSCNTold" 0 113 "int16"
V G "encVel" 0 114 "sint32"
V G "encVelOld" 0 114 "sint32"
V G "encVelavg" 0 115 "sint32"
V G "encPos" 0 116 "sint32"
V G "encPosOld" 0 116 "sint32"
V G "avg" 0 121 "float"
V G "n_avg" 0 121 "float"
V G "traking_flag" 0 123 "int8"
V G "goto_tracking_flag" 0 124 "int8"
V G "goto_flag" 0 125 "int8" "* ***************************************************************************"
C L "TIMER0_isr" 0 126 1 "*"
F G "TIMER0_isr" 0 130 "void()"
C L "TIMER0_isr" 0 126 1 "FUNCTION"
C L "SSP_isr" 0 140 1 "*"
C L "SSP_isr" 0 140 1 "*"
F G "SSP_isr" 0 144 "void()"
C L "SSP_isr" 0 140 1 "FUNCTION"
C L "SSP_isr" 0 140 1 "FUNCTION"
C L "SSP_isr" 0 140 1 "FUNCTION"
C L "SSP_isr" 0 140 3 "FUNCTION"
C L "SSP_isr" 0 140 1 "FUNCTION"
C L "QEIF_isr" 0 179 1 "*"
C L "QEIF_isr" 0 179 1 "*"
F G "QEIF_isr" 0 183 "void()" "encPERIOD = make16( old_POSCNTH, old_POSCNTL );"
C L "UpdatePWMDutyCycles" 0 192 1 "*"
C L "UpdatePWMDutyCycles" 0 192 1 "*"
C L "UpdatePWMDutyCycles" 0 192 1 "*"
C L "UpdatePWMDutyCycles" 0 192 1 "*"
F G "UpdatePWMDutyCycles" 0 197 "void()"
C L "MAIN" 0 215 1 "*"
C L "MAIN" 0 215 1 "*"
C L "MAIN" 0 215 1 "*"
C L "MAIN" 0 215 1 "*"
C L "MAIN" 0 215 12 "*"
C L "MAIN" 0 237 1 "*"
C L "MAIN" 0 237 1 "*"
F G "MAIN" 0 241 "void()" "int pa, pb, pc, pd, tmp;"
V L "i" 0 243 "int8"
V L "sec" 0 243 "int8"
V L "X32" 0 244 "sint32" ", Y32;"
V L "tmp_float" 0 245 "float" "Setup uCU"
C L "MAIN" 0 237 2 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 3 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 6 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 5 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 2 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 14 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 6 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
C L "MAIN" 0 237 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 4
F B "read_adc" 0 1
F B "setup_timer_0" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_5" 1 0
F B "get_timer5" 0 0
F B "set_timer5" 1 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_power_pwm" 7 0
F B "set_power_pwm0_duty" 1 0
F B "set_power_pwm2_duty" 1 0
F B "set_power_pwm4_duty" 1 0
F B "set_power_pwm6_duty" 1 0
F B "set_power_pwm_override" 3 0
F B "setup_power_pwm_pins" 4 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "i2c_read" 0 2
F B "i2c_write" 1 2
F B "i2c_start" 0 2
F B "i2c_stop" 0 1
F B "i2c_isr_state" 0 1
F B "i2c_slaveaddr" 1 2
F B "i2c_poll" 0 1
